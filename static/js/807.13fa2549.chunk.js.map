{"version":3,"file":"static/js/807.13fa2549.chunk.js","mappings":"8OAKaA,EAAe,IAAIC,gBAAgB,CAC9CC,QAHa,qCAMfC,EAAAA,EAAMC,SAASC,QAAO,GAAAC,OAPN,+BAOsB,IAChCC,EAAM,oBAAAA,KAAAC,EAAAA,EAAAA,GAAA,KAAAD,EAAA,CAQT,OARSE,EAAAA,EAAAA,GAAAF,EAAA,EAAAG,IAAA,UAAAC,MAAA,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MACV,SAAAC,EAAcC,GAAM,IAAAC,EAAAC,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEOpB,EAAAA,EAAMqB,IAAI,GAADlB,OAAIW,EAAM,KAAAX,OAAIN,IAAgB,KAAD,EAAjD,OAAiDkB,EAAAG,EAAAI,KAArDN,EAAID,EAAJC,KAAIE,EAAAK,OAAA,SACLP,GAAI,OAAAE,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAEXO,QAAQC,MAAMR,EAAAM,GAAEG,SAAS,yBAAAT,EAAAU,OAAA,GAAAf,EAAA,kBAE5B,gBAAAgB,GAAA,OAAApB,EAAAqB,MAAA,KAAAC,UAAA,EARS,MAQT3B,CAAA,CARS,GAWN4B,EAAO,IAAI5B,C,sICjBF,SAAS6B,IACtB,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACRE,GAAwCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAapC,OAXAI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,eAAAC,GAAAlC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAG,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACGY,EAAAA,EAAKa,QAAQ,WAAD1C,OAAY+B,EAAE,aAAY,KAAD,EAAlDlB,EAAIE,EAAAI,KACVG,QAAQqB,IAAI9B,GACZyB,EAAgBzB,EAAK+B,SAAS,wBAAA7B,EAAAU,OAAA,GAAAf,EAAA,KAC/B,kBAJc,OAAA+B,EAAAd,MAAA,KAAAC,UAAA,KAKfY,GACF,GAAG,CAACT,IAEJT,QAAQqB,IAAIN,IAGVQ,EAAAA,EAAAA,KAAA,MAAAC,SAC2B,IAAxBT,EAAaU,QACZF,EAAAA,EAAAA,KAAA,KAAAC,SAAG,mBAES,OAAZT,QAAY,IAAZA,OAAY,EAAZA,EAAcW,KAAI,SAAAC,GAAA,IAAGC,EAAMD,EAANC,OAAQC,EAAOF,EAAPE,QAAO,OAClCC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAP,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAKI,KACLL,EAAAA,EAAAA,KAAA,KAAAC,SAAIK,MACH,KAKb,C","sources":["API/MOVIE/TMDBAPI.js","pages/MovieReviews/MovieReviews.jsx"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst baseUrl = \"https://api.themoviedb.org/\";\r\nconst apiKey = \"c7233bc29883c6e289635e083fc7eb75\";\r\n\r\nexport const searchParams = new URLSearchParams({\r\n  api_key: apiKey,\r\n});\r\n\r\naxios.defaults.baseURL = `${baseUrl}`;\r\nclass Movies {\r\n  async getData(querry) {\r\n    try {\r\n      const { data } = await axios.get(`${querry}?${searchParams}`);\r\n      return data;\r\n    } catch (e) {\r\n      console.error(e.message);\r\n    }\r\n  }\r\n}\r\n\r\nconst TMDB = new Movies();\r\n\r\nexport { TMDB };\r\n","import { useEffect, useState } from \"react\";\r\nimport { Link, Outlet, useParams } from \"react-router-dom\";\r\nimport { TMDB } from \"../../API/MOVIE/TMDBAPI\";\r\n\r\nexport default function MovieReviews() {\r\n  const { id } = useParams();\r\n  const [movieReviews, setMovieReviews] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const data = await TMDB.getData(`3/movie/${id}/reviews`);\r\n      console.log(data);\r\n      setMovieReviews(data.results);\r\n    };\r\n    fetchData();\r\n  }, [id]);\r\n\r\n  console.log(movieReviews);\r\n\r\n  return (\r\n    <ul>\r\n      {movieReviews.length === 0 ? (\r\n        <p>No reviews yet</p>\r\n      ) : (\r\n        movieReviews?.map(({ author, content }) => (\r\n          <>\r\n            <h3>{author}</h3>\r\n            <p>{content}</p>\r\n          </>\r\n        ))\r\n      )}\r\n    </ul>\r\n  );\r\n}\r\n"],"names":["searchParams","URLSearchParams","api_key","axios","defaults","baseURL","concat","Movies","_classCallCheck","_createClass","key","value","_getData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","querry","_yield$axios$get","data","wrap","_context","prev","next","get","sent","abrupt","t0","console","error","message","stop","_x","apply","arguments","TMDB","MovieReviews","id","useParams","_useState","useState","_useState2","_slicedToArray","movieReviews","setMovieReviews","useEffect","fetchData","_ref","getData","log","results","_jsx","children","length","map","_ref2","author","content","_jsxs","_Fragment"],"sourceRoot":""}