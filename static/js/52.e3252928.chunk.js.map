{"version":3,"file":"static/js/52.e3252928.chunk.js","mappings":"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","sources":["API/MOVIE/TMDBAPI.js","webpack://goit-react-hw-05-movies/./src/pages/Movies/movies.module.css?e50d","pages/Movies/Movies.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst baseUrl = \"https://api.themoviedb.org/\";\r\nconst apiKey = \"c7233bc29883c6e289635e083fc7eb75\";\r\n\r\nexport const searchParams = new URLSearchParams({\r\n  api_key: apiKey,\r\n});\r\n\r\naxios.defaults.baseURL = `${baseUrl}`;\r\nclass Movies {\r\n  async getData(querry) {\r\n    try {\r\n      const { data } = await axios.get(`${querry}?${searchParams}`);\r\n      return data;\r\n    } catch (e) {\r\n      console.error(e.message);\r\n    }\r\n  }\r\n}\r\n\r\nconst TMDB = new Movies();\r\n\r\nexport { TMDB };\r\n","// extracted by mini-css-extract-plugin\nexport default {\"movie-list\":\"movies_movie-list__Cr4X6\"};","import { useEffect, useState } from \"react\";\r\nimport { searchParams, TMDB } from \"../../API/MOVIE/TMDBAPI\";\r\nimport { Link, useLocation, useParams } from \"react-router-dom\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\nimport css from \"./movies.module.css\";\r\n\r\nexport default function Movies() {\r\n  const [movie, setMovie] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [searchParamsQuery, setSearchParamsQuery] = useSearchParams();\r\n  const location = useLocation();\r\n  const name = searchParamsQuery.get(\"query\") || \"\";\r\n  // setSearchQuery(name || \"\");\r\n  // console.log(name);\r\n\r\n  useEffect(\r\n    () => {\r\n      const fetchData = async () => {\r\n        console.log(name);\r\n        searchParams.append(\"query\", searchQuery || name);\r\n        const data = await TMDB.getData(\"3/search/movie\");\r\n        setMovie(data.results);\r\n      };\r\n\r\n      fetchData();\r\n    },\r\n    [searchQuery],\r\n    [name]\r\n  );\r\n\r\n  function onSubmitGetQuery(evt) {\r\n    evt.preventDefault();\r\n    const inputValue = evt.target.query.value;\r\n    inputValue.trim();\r\n    if (inputValue === \"\") {\r\n      // setMovie([]);\r\n      setSearchParamsQuery({});\r\n      return;\r\n    }\r\n    const nextParams = { query: inputValue };\r\n    setSearchParamsQuery(nextParams);\r\n    setSearchQuery(inputValue);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmitGetQuery}>\r\n        <label htmlFor=\"query\"></label>\r\n        <input id=\"query\"></input>\r\n        <button type=\"submit\">find</button>\r\n      </form>\r\n\r\n      <ul className={css[\"movie-list\"]}>\r\n        {movie.map(({ title, id }) => (\r\n          <Link state={{ from: location }} to={`/movies/${id}`} key={id}>\r\n            {title}\r\n          </Link>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n"],"names":["searchParams","URLSearchParams","api_key","axios","defaults","baseURL","concat","Movies","_classCallCheck","_createClass","key","value","_getData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","querry","_yield$axios$get","data","wrap","_context","prev","next","get","sent","abrupt","t0","console","error","message","stop","_x","apply","arguments","TMDB","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","searchQuery","setSearchQuery","_useSearchParams","useSearchParams","_useSearchParams2","searchParamsQuery","setSearchParamsQuery","location","useLocation","name","useEffect","fetchData","_ref","log","append","getData","results","_jsxs","_Fragment","children","onSubmit","evt","preventDefault","inputValue","target","query","trim","_jsx","htmlFor","id","type","className","css","map","_ref2","title","Link","state","from","to"],"sourceRoot":""}