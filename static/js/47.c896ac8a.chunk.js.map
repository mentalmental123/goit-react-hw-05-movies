{"version":3,"file":"static/js/47.c896ac8a.chunk.js","mappings":"6OAKaA,EAAe,IAAIC,gBAAgB,CAC9CC,QAHa,qCAMfC,EAAAA,EAAMC,SAASC,QAAO,GAAAC,OAPN,+BAOsB,IAChCC,EAAM,oBAAAA,KAAAC,EAAAA,EAAAA,GAAA,KAAAD,EAAA,CAQT,OARSE,EAAAA,EAAAA,GAAAF,EAAA,EAAAG,IAAA,UAAAC,MAAA,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MACV,SAAAC,EAAcC,GAAM,IAAAC,EAAAC,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEOpB,EAAAA,EAAMqB,IAAI,GAADlB,OAAIW,EAAM,KAAAX,OAAIN,IAAgB,KAAD,EAAjD,OAAiDkB,EAAAG,EAAAI,KAArDN,EAAID,EAAJC,KAAIE,EAAAK,OAAA,SACLP,GAAI,OAAAE,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAEXO,QAAQC,MAAMR,EAAAM,GAAEG,SAAS,yBAAAT,EAAAU,OAAA,GAAAf,EAAA,kBAE5B,gBAAAgB,GAAA,OAAApB,EAAAqB,MAAA,KAAAC,UAAA,EARS,MAQT3B,CAAA,CARS,GAWN4B,EAAO,IAAI5B,C,qICjBF,SAAS6B,IACtB,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACRE,GAAkCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAY9B,OAVAI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,eAAAC,GAAAlC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAG,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACGY,EAAAA,EAAKa,QAAQ,WAAD1C,OAAY+B,EAAE,aAAY,KAAD,EAAlDlB,EAAIE,EAAAI,KACVmB,EAAazB,EAAK8B,MAAM,wBAAA5B,EAAAU,OAAA,GAAAf,EAAA,KACzB,kBAHc,OAAA+B,EAAAd,MAAA,KAAAC,UAAA,KAIfY,GACF,GAAG,CAACT,IAEJT,QAAQsB,IAAIP,IAGVQ,EAAAA,EAAAA,KAAA,MAAAC,SACY,OAATT,QAAS,IAATA,OAAS,EAATA,EAAWU,KAAI,SAAAC,GAAA,IAAGC,EAAYD,EAAZC,aAAcC,EAASF,EAATE,UAAWC,EAAIH,EAAJG,KAAMpB,EAAEiB,EAAFjB,GAAE,OAClDqB,EAAAA,EAAAA,MAAA,MAAAN,SAAA,EACED,EAAAA,EAAAA,KAAA,OACEQ,IAAG,kCAAArD,OAAoCiD,GACvCK,IAAiBH,KAEnBN,EAAAA,EAAAA,KAAA,MAAAC,SAAKK,KACLN,EAAAA,EAAAA,KAAA,KAAAC,SAAII,MANGnB,EAOJ,KAIb,C","sources":["API/MOVIE/TMDBAPI.js","pages/MovieCast/MovieCast.jsx"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst baseUrl = \"https://api.themoviedb.org/\";\r\nconst apiKey = \"c7233bc29883c6e289635e083fc7eb75\";\r\n\r\nexport const searchParams = new URLSearchParams({\r\n  api_key: apiKey,\r\n});\r\n\r\naxios.defaults.baseURL = `${baseUrl}`;\r\nclass Movies {\r\n  async getData(querry) {\r\n    try {\r\n      const { data } = await axios.get(`${querry}?${searchParams}`);\r\n      return data;\r\n    } catch (e) {\r\n      console.error(e.message);\r\n    }\r\n  }\r\n}\r\n\r\nconst TMDB = new Movies();\r\n\r\nexport { TMDB };\r\n","import { useEffect, useState } from \"react\";\r\nimport { Link, Outlet, useParams } from \"react-router-dom\";\r\nimport { TMDB } from \"../../API/MOVIE/TMDBAPI\";\r\n\r\nexport default function MovieCast() {\r\n  const { id } = useParams();\r\n  const [movieCast, setMovieCast] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const data = await TMDB.getData(`3/movie/${id}/credits`);\r\n      setMovieCast(data.cast);\r\n    };\r\n    fetchData();\r\n  }, [id]);\r\n\r\n  console.log(movieCast);\r\n\r\n  return (\r\n    <ul>\r\n      {movieCast?.map(({ profile_path, character, name, id }) => (\r\n        <li key={id}>\r\n          <img\r\n            src={`https://image.tmdb.org/t/p/w200${profile_path}`}\r\n            alt={(character, name)}\r\n          ></img>\r\n          <h3>{name}</h3>\r\n          <p>{character}</p>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n"],"names":["searchParams","URLSearchParams","api_key","axios","defaults","baseURL","concat","Movies","_classCallCheck","_createClass","key","value","_getData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","querry","_yield$axios$get","data","wrap","_context","prev","next","get","sent","abrupt","t0","console","error","message","stop","_x","apply","arguments","TMDB","MovieCast","id","useParams","_useState","useState","_useState2","_slicedToArray","movieCast","setMovieCast","useEffect","fetchData","_ref","getData","cast","log","_jsx","children","map","_ref2","profile_path","character","name","_jsxs","src","alt"],"sourceRoot":""}